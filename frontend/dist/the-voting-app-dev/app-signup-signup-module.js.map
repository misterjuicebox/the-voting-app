{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/add/observable/forkJoin.js","webpack:///./src/app/signup/confirmation/confirmation.component.css","webpack:///./src/app/signup/confirmation/confirmation.component.html","webpack:///./src/app/signup/confirmation/confirmation.component.ts","webpack:///./src/app/signup/signup-routing.module.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.module.ts"],"names":[],"mappings":"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","file":"app-signup-signup-module.js","sourcesContent":["import { Observable, forkJoin as staticForkJoin } from 'rxjs';\nObservable.forkJoin = staticForkJoin;\n//# sourceMappingURL=forkJoin.js.map","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9jb25maXJtYXRpb24vY29uZmlybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form>\\n  <h1>Enter Confirmation</h1>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Confirmation Code</label>\\n    <input [(ngModel)]=\\\"user.code\\\" type=\\\"password\\\" name=\\\"code\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n  </div>\\n  <button type=\\\"button\\\" (click)=\\\"submit(user)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport {Observable} from 'rxjs';\nimport 'rxjs/add/observable/forkJoin';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.css']\n})\nexport class ConfirmationComponent implements OnInit {\n  @Input() user: any = {};\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      console.log(params);\n      this.confirmSignUp(params);\n    });\n  }\n\n    confirmSignUp(params: any) {\n        this.authService.confirmSignUp(params.username, params.code).subscribe(result => {\n          console.log(result);\n    });\n  }\n\n  submit(user: any) {\n    const email = user.email;\n    const code = user.code;\n    const password = user.password;\n    const authRequests = [];\n\n    authRequests.push(this.authService.confirmSignUp(email, code));\n    authRequests.push(this.authService.signIn(email, password));\n\n    Observable.forkJoin(authRequests).subscribe(result => {\n      console.log(result)\n      if (result[0] === 'SUCCESS' && this.authService.isAuthenticated()) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {Routes, RouterModule} from \"@angular/router\";\nimport {SignupComponent} from \"./signup.component\";\nimport {ConfirmationComponent} from './confirmation/confirmation.component';\n\nconst routes: Routes = [\n    {path: '', component: SignupComponent},\n    {path: 'confirmation', component: ConfirmationComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SignupRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form *ngIf=\\\"!showConfirmation\\\">\\n  <h1>Signup to Vote!</h1>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Email</label>\\n    <input [(ngModel)]=\\\"user.email\\\" type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n    <input [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\n  </div>\\n  <button type=\\\"button\\\" (click)=\\\"submit(user)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\\n<app-confirmation *ngIf=\\\"showConfirmation\\\" [user]=\\\"user\\\"></app-confirmation>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user: any = {};\n\n  showConfirmation: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  submit(user: any) {\n    const email = user.email;\n    const password = user.password;\n    this.authService.signUp(email, password).subscribe(result => {\n      debugger;\n      this.showConfirmation = true;\n      console.log(result)\n    },\n      error => {\n        console.log(error);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SignupComponent } from './signup.component';\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\n\n@NgModule({\n  declarations: [SignupComponent, ConfirmationComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    SignupRoutingModule\n  ]\n})\nexport class SignupModule { }\n"],"sourceRoot":""}