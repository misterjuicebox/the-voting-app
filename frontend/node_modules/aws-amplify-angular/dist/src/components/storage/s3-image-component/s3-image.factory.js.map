{"version":3,"file":"s3-image.factory.js","sourceRoot":"","sources":["../../../../../src/components/storage/s3-image-component/s3-image.factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,SAAS,EAAE,wBAAwB,EAAa,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE/H,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,cAAc,EAAE,MAAW,uBAAuB,CAAC;AAE5D,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAA;AAClE,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;;IAkB/D,0BAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;wBAHrC,IAAI,YAAY,EAAU;KAGgB;IAE3E,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,sCAAW,GAAX,eAAgB;IAEhB,wCAAa,GAAb;QAAA,iBAeC;QAbC,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,qBAAqB,EAAC,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,oBAAoB,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAEzP,IAAI,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAEvG,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC3D,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,IAAI,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACvD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;QAEjE,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,CAAC;YACzC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,CAAC,CAAA;KACH;;gBAvCF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,uHAIC;iBACZ;;;;gBAf6C,wBAAwB;;;8BAiBnE,KAAK;yBACL,KAAK;4BACL,KAAK;6BACL,MAAM;kCAEN,SAAS,SAAC,yBAAyB;;2BArCtC;;SA+Ba,gBAAgB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, Output, EventEmitter } from '@angular/core';\n\nimport { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';\nimport { ComponentMount }      from '../../component.mount';\nimport { S3ImageClass } from './s3-image.class';\nimport { S3ImageComponentIonic } from './s3-image.component.ionic'\nimport { S3ImageComponentCore } from './s3-image.component.core';\n\n@Component({\n  selector: 'amplify-s3-image',\n  template: `\n              <div>\n                <ng-template component-host></ng-template>\n              </div>\n            `\n})\nexport class S3ImageComponent implements OnInit, OnDestroy {\n  @Input() framework: string;\n  @Input() path: string;\n  @Input() options: any;\n  @Output()\n  selected: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild(DynamicComponentDirective) componentHost: DynamicComponentDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnDestroy() {}\n\n  loadComponent() {\n\n    let imageComponent = this.framework && this.framework.toLowerCase() === 'ionic' ? new ComponentMount(S3ImageComponentIonic,{path:this.path, options: this.options}) : new ComponentMount(S3ImageComponentCore, {path: this.path, options: this.options});\n\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(imageComponent.component);\n\n    let viewContainerRef = this.componentHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    (<S3ImageClass>componentRef.instance).data = imageComponent.data;\n\n    componentRef.instance.selected.subscribe((e) => {\n      this.selected.emit(e);\n    })\n  }\n}\n"]}