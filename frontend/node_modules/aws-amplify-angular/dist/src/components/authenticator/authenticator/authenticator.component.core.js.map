{"version":3,"file":"authenticator.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/authenticator/authenticator.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAqB,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,cAAc,EAAa,MAAM,oBAAoB,CAAC;AAE/D,IAAM,QAAQ,GAAG,4pCAsChB,CAAC;;IAeA,oCAAY,cAA8B;yBAPnB;YACrB,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,IAAI;SACX;6BACoB,EAAE;oBASN,EAAE;QALjB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;0BAMG,4CAAI;uBAAC,IAAS;YAChB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aACvB;;;;;0BAIC,oDAAY;uBAAC,YAAiB;YAChC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;;;;IAGpC,8CAAS,GAAT;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,gBAAgB;aACjC,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB,EAAE;YACD,KAAI,CAAC,SAAS,GAAG;gBACf,OAAO,EAAE,QAAQ;gBACjB,MAAM,EAAE,IAAI;aACb,CAAA;SACF,CAAC,CAAC;KACN;IAED,+CAAU,GAAV,UAAW,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,IAAI,EAAb,CAAa,CAAC;aAC3C,MAAM,GAAG,CAAC,CAAC;KACf;;gBAlDF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,UAAA;iBACT;;;;gBA9CQ,cAAc;;;yBA4DpB,KAAK;yBAGL,KAAK;iCAUL,KAAK;;qCAzFR;;SA+Da,0BAA0B","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { AmplifyService, AuthState } from '../../../providers';\n\nconst template = `\n  <div class=\"amplify-authenticator\">\n    <amplify-auth-sign-in-core\n      *ngIf=\"!shouldHide('SignIn')\"\n      [authState]=\"authState\"\n    ></amplify-auth-sign-in-core>\n\n    <amplify-auth-sign-up-core\n      *ngIf=\"!shouldHide('SignUp')\"\n      [authState]=\"authState\"\n      [signUpConfig]=\"_signUpConfig\"\n    ></amplify-auth-sign-up-core>\n\n    <amplify-auth-confirm-sign-up-core\n      *ngIf=\"!shouldHide('ConfirmSignUp')\"\n      [authState]=\"authState\"\n    ></amplify-auth-confirm-sign-up-core>\n\n    <amplify-auth-confirm-sign-in-core\n    *ngIf=\"!shouldHide('ConfirmSignIn')\"\n    [authState]=\"authState\"\n    ></amplify-auth-confirm-sign-in-core>\n\n    <amplify-auth-forgot-password-core\n    *ngIf=\"!shouldHide('ForgotPassword')\"\n    [authState]=\"authState\"\n    ></amplify-auth-forgot-password-core>\n\n    <amplify-auth-greetings-core\n    *ngIf=\"!shouldHide('Greetings')\"\n    [authState]=\"authState\"\n    ></amplify-auth-greetings-core>\n\n     <amplify-auth-require-new-password-core\n    *ngIf=\"!shouldHide('RequireNewPassword')\"\n    [authState]=\"authState\"\n    ></amplify-auth-require-new-password-core>\n  </div>\n`;\n\n\n@Component({\n  selector: 'amplify-authenticator-core',\n  template\n})\nexport class AuthenticatorComponentCore {\n  authState: AuthState = {\n    state: 'signIn',\n    user: null\n  };\n  _signUpConfig: any = {};\n  amplifyService: AmplifyService;\n\n  constructor(amplifyService: AmplifyService) {\n    this.amplifyService = amplifyService;\n    this.subscribe();\n  }\n\n  @Input()\n  hide: string[] = [];\n\n  @Input()\n  set data(data: any) {\n    if (data.signUpConfig) {\n      this._signUpConfig = data.signUpConfig;\n    }\n    if (data.hide) {\n      this.hide = data.hide;\n    }\n  }\n\n  @Input()\n  set signUpConfig(signUpConfig: any) {\n    this._signUpConfig = signUpConfig;\n  }\n\n  subscribe() {\n    this.amplifyService.authStateChange$\n      .subscribe(state => {\n        this.authState = state;\n      }, () => {\n        this.authState = {\n          'state': 'signIn',\n          'user': null\n        }\n      });\n  }\n\n  shouldHide(comp) {\n    return this.hide.filter(item => item === comp)\n      .length > 0;\n  }\n}\n"]}